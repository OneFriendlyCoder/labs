# unix networking activity 1-6
FROM ubuntu:jammy
ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true
RUN apt-get update -y && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-bs4 \
    wget \
    curl \
    net-tools \
    iproute2 \
    nano \
    jq \
    cron \
    zip \
    unzip \
    software-properties-common \
    ca-certificates \
    fonts-liberation \
    libnss3 \
    lsb-release \
    xdg-utils \
    libgbm1 \
    gnupg \
    language-pack-en-base \
    debconf-utils \
    iputils-ping \
    tzdata \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN python3 -m pip install --upgrade pip setuptools wheel && \
    python3 -m pip install pymongo faker bcrypt requests tinycss2 webcolors
RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
    apt-get update && apt-get install -y nodejs && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | gpg --batch -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
RUN echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
RUN apt-get update && apt-get install -y mongodb-org mongodb-mongosh && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN mkdir -p /home/labDirectory /home/.evaluationScripts /var/log/mongodb /data/db && \
    chown -R mongodb:mongodb /data/db /var/log/mongodb
RUN echo "cd /home/labDirectory" > /root/.bashrc
ENV INSTRUCTOR_SCRIPTS="/home/.evaluationScripts"
ENV LAB_DIRECTORY="/home/labDirectory"
ENV PATH="/home/.evaluationScripts:${PATH}"
ENV TERM="xterm"
WORKDIR /home/labDirectory
EXPOSE 27017
USER mongodb
USER root
ENTRYPOINT ["/home/.evaluationScripts/entrypoint.sh"]

# --------------------------------------------------------------------------------------------------------------------

# exploring web via terminal
FROM ubuntu:latest
RUN apt-get update -y && apt-get install -y software-properties-common language-pack-en-base debconf-utils curl wget

RUN ln -fs /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
RUN LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php

RUN apt-get update -y && apt-get install python3 python3-pip -y
RUN apt-get update -y && apt-get install cron -y
RUN apt-get install -y iputils-ping


ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true


RUN echo "tzdata tzdata/Areas select Europe" > /tmp/preseed.txt; \
    echo "tzdata tzdata/Zones/Europe select Berlin" >> /tmp/preseed.txt; \
    debconf-set-selections /tmp/preseed.txt && \
    apt-get update && \
    apt-get install -y tzdata

RUN mkdir /home/labDirectory
RUN mkdir /home/.evaluationScripts
WORKDIR /home/labDirectory
# EXPOSE 30001
ENTRYPOINT ["/home/.evaluationScripts/server.sh"]

# --------------------------------------------------------------------------------------------------------------------

# network Interfaces
FROM ubuntu:latest

# noninteractive and locale up front so installs are non-interactive
ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true
ENV LC_ALL=en_US.UTF-8

# Installing common packages (no-recommends reduces image size)
RUN apt-get update -y \
 && apt-get install -y --no-install-recommends software-properties-common language-pack-en-base debconf-utils curl wget ca-certificates \
 && rm -rf /var/lib/apt/lists/*

RUN ln -fs /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

# add the PPA (software-properties-common provides add-apt-repository)
RUN add-apt-repository -y ppa:ondrej/php

# install python, pip, cron, iputils-ping (combine and cleanup)
RUN apt-get update --allow-releaseinfo-change || apt-get update -o Acquire::AllowReleaseInfoChange=true \
 && apt-get install -y --no-install-recommends python3 python3-pip cron iputils-ping \
 && rm -rf /var/lib/apt/lists/*

# Preseed tzdata and install tzdata + iproute2 (allow releaseinfo change again)
RUN echo "tzdata tzdata/Areas select Europe" > /tmp/preseed.txt \
 && echo "tzdata tzdata/Zones/Europe select Berlin" >> /tmp/preseed.txt \
 && debconf-set-selections /tmp/preseed.txt \
 && apt-get update --allow-releaseinfo-change || apt-get update -o Acquire::AllowReleaseInfoChange=true \
 && apt-get install -y --no-install-recommends tzdata iproute2 \
 && rm -rf /var/lib/apt/lists/* \
 && rm -f /tmp/preseed.txt

RUN mkdir -p /home/labDirectory
RUN mkdir -p /home/.evaluationScripts
WORKDIR /home/labDirectory

CMD ["/bin/bash", "-c", "ip -4 addr | grep 'inet ' | awk '{print $2}' > /home/.evaluationScripts/correct_ipv4_addresses.txt; while :; do sleep 10; done"]

# --------------------------------------------------------------------------------------------------------------------

# Outvideo/Invideo css labs
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install only essential tools in one layer to reduce image size
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        wget \
        vim \
        python3 \
        python3-bs4 \
        python3-pip \
        iproute2 \
        net-tools \
        less && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages for CSS evaluation
RUN pip3 install --no-cache-dir tinycss2 webcolors

# Setup Directory Structure
RUN mkdir -p /home/labDirectory /home/.evaluationScripts

# Set the working directory
WORKDIR /home/labDirectory

# Global Settings
RUN echo "cd /home/labDirectory" >> /root/.bashrc && \
    echo "alias ls='ls --color=always'" >> /root/.bashrc && \
    echo "rm -f \$(find /home -type f -name \"._*\")" >> /root/.bashrc

CMD ["bash", "-c", "while :; do sleep 10; done"]
# CMD [ "/bin/bash", "-c", "bash /home/.evaluationScripts/init.sh; while :; do sleep 10; done" ]

# --------------------------------------------------------------------------------------------------------------------


# invideo_html_labs
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install only essential tools in one layer to reduce image size
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        wget \
        vim \
        python3 \
        python3-bs4 \
        iproute2 \
        net-tools \
        less && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Setup Directory Structure
RUN mkdir -p /home/labDirectory /home/.evaluationScripts

# Set the working directory
WORKDIR /home/labDirectory

# Global Settings
RUN echo "cd /home/labDirectory" >> /root/.bashrc && \
    echo "alias ls='ls --color=always'" >> /root/.bashrc && \
    echo "rm -f \$(find /home -type f -name \"._*\")" >> /root/.bashrc

CMD [ "/bin/bash", "-c", "bash /home/.evaluationScripts/init.sh; while :; do sleep 10; done" ]
